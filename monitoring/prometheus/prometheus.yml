# Prometheus Configuration for TaskFlow
# Scrapes metrics from backend API, PostgreSQL, and infrastructure

global:
  scrape_interval: 15s  # Default scrape interval
  evaluation_interval: 15s  # How often to evaluate rules
  external_labels:
    cluster: 'taskflow'
    environment: 'development'

# Alertmanager configuration (optional - configure if using Alertmanager)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#             - alertmanager:9093

# Load alert rules
rule_files:
  - '/etc/prometheus/alerts/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # TaskFlow Backend API
  - job_name: 'taskflow-backend'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['backend:3000']
        labels:
          service: 'backend'
          component: 'api'
    # Health check before scraping
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:3000

  # Node Exporter (for system metrics)
  # Uncomment when deploying to actual servers
  # - job_name: 'node-exporter'
  #   static_configs:
  #     - targets:
  #         - 'node-exporter:9100'
  #       labels:
  #         service: 'node-exporter'
  #         instance: 'server-1'

  # PostgreSQL Exporter (for database metrics)
  # Uncomment when using postgres_exporter
  # - job_name: 'postgres'
  #   static_configs:
  #     - targets:
  #         - 'postgres-exporter:9187'
  #       labels:
  #         service: 'postgresql'
  #         database: 'taskflow'

  # Redis Exporter (for cache metrics)
  # Uncomment when using redis_exporter
  # - job_name: 'redis'
  #   static_configs:
  #     - targets:
  #         - 'redis-exporter:9121'
  #       labels:
  #         service: 'redis'

  # Blackbox Exporter (for endpoint monitoring)
  # Uncomment when using blackbox_exporter
  # - job_name: 'blackbox-http'
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]
  #   static_configs:
  #     - targets:
  #         - http://frontend:80/health
  #         - http://backend:3000/health
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox-exporter:9115

  # Kubernetes metrics (when running on K8s)
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #     - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #       action: keep
  #       regex: default;kubernetes;https

  # - job_name: 'kubernetes-nodes'
  #   kubernetes_sd_configs:
  #     - role: node
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  # - job_name: 'kubernetes-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
  #       action: keep
  #       regex: true
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
  #       action: replace
  #       target_label: __metrics_path__
  #       regex: (.+)
  #     - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
  #       action: replace
  #       regex: ([^:]+)(?::\d+)?;(\d+)
  #       replacement: $1:$2
  #       target_label: __address__
